canbus:
  - platform: esp32_can
    tx_pin: GPIO22 #GPIO5
    rx_pin: GPIO21 #GPIO4
    can_id: 8
    bit_rate: 50kbps
    on_frame:
    - can_id: 0x1f
      can_id_mask: 0x0000001f
      use_extended_id: true
      then:
      - lambda: |-
         if(x.size() > 6) {
            uint32_t addr = x[5] + (x[4] << 8);
            uint8_t tmpU8 = (uint8_t)x[6];
            if (std::abs(tmpU8) < 1e-9){ return;}
            switch(addr) {

                    case 40651:
                        id(HV_50_0_40651).publish_state(tmpU8);
                        break;
                
                    case 40686:
                        id(HV_50_0_40686).publish_state(tmpU8);
                        break;
                
                    case 38606:
                        id(HV_50_0_38606).publish_state(tmpU8);
                        break;
                
                    case 40687:
                        id(HV_50_0_40687).publish_state(tmpU8);
                        break;
                
                    case 37600:
                        id(HV_50_0_37600).publish_state(tmpU8);
                        break;
                
                    case 37608:
                        id(HV_50_0_37608).publish_state(tmpU8);
                        break;
                
                    case 37611:
                        id(HV_50_0_37611).publish_state(tmpU8);
                        break;
                
                    case 39652:
                        id(HV_50_0_39652).publish_state(tmpU8);
                        break;
                
                    case 38600:
                        id(HV_50_0_38600).publish_state(tmpU8);
                        break;
                
                    case 29042:
                        id(HV_0_0_29042).publish_state(tmpU8);
                        break;
                
                    case 29043:
                        id(HV_0_0_29043).publish_state(tmpU8);
                        break;
                
                    case 29044:
                        id(HV_0_0_29044).publish_state(tmpU8);
                        break;
                
                    case 29045:
                        id(HV_0_0_29045).publish_state(tmpU8);
                        break;
                
                    case 29046:
                        id(HV_0_0_29046).publish_state(tmpU8);
                        break;
                
                }
            if(x.size() > 7) {
                int16_t tmpS16 = (int16_t)(x[6] << 8) + x[7];                
                if (std::abs(tmpS16) < 1e-9){ return;}
                
                switch(addr) {
                    case 0:
                        id(HV_50_0_0).publish_state(tmpS16);
                        break;


                    case 37602:
                        id(HV_50_0_37602).publish_state(tmpS16);
                        break;
                    }
            }
         }
