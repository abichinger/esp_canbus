
    # """Operations in CAN-Message"""
    # RESPONSE = 0x42
    # GET_REQUEST = 0x40
    # SET_REQUEST = 0x46


number:
   
   # Humidity set value
    #data : message_len = 1, operation = 70 (0x46), function_group = 50 (0x32), function_number = 0 (0x00), datapoint = 40687 (9eef) , data
  - platform: template
    name: "${HV_50_0_40687} update" 
    optimistic: true
    min_value: 30
    max_value: 65
    step: 5
    restore_value: false
    initial_value: 50
    unit_of_measurement: '%'
    icon: mdi:water-percent
    device_class: humidity
    on_value:
        then: 
            # - canbus.send: 
                # canbus_id: cbus
                # can_id: 0x1FE04208
                # data: [0x01, 0x46, 0x32, 0x00, 0x9E, 0xEF, atoi(id(HV_50_0_40687_set).state.c_str())]
                # use_extended_id: true
            - lambda: |-
                    uint32_t can_id = 0x1FE04208;
                    bool use_extended_id = 1;
                    std::vector< uint8_t > data{0x01, 0x46, 0x32, 0x00, 0x9E, 0xEF, (uint8_t) id(HV_50_0_40687_set).state}; 
                    id(cbus)->send_data(can_id, use_extended_id, data);
            - delay: 200ms
            - logger.log:
                format: "canbus send Humidity set value %f and hex %x"
                args: [ 'id(HV_50_0_40687_set).state', '(uint8_t) id(HV_50_0_40687_set).state' ]
    id: HV_50_0_40687_set



select:
  - platform: template
    name: "Debug"
    id: canbus_debug_tag
    optimistic: true
    options:
      - "none"
      - "GET-Humidity-extract-air"
      - "GET-Extract-air-temp"
      - "GET-Outside-air-temp"
      #- "SET-Humidity-set"
    set_action:
      then:
          - delay: 500ms
          - if: ## GET_REQUEST : 37600 : Humidity extract air
              condition:
                - lambda: |-
                    return (id(canbus_debug_tag).state) == "GET-Humidity-extract-air";
              then:                       
                        # Send the hexadecimal code "01 40 32 00 92 E0" over the CAN bus at address 0x1FE04208
                        # Candump = can0  1FE04208   [6]  01 40 32 00 92 E0
                        - canbus.send:
                            canbus_id: cbus
                            can_id: 0x1FE04208
                            data: [0x01, 0x40, 0x32, 0x00, 0x92, 0xE0]
                            use_extended_id: true
                    
          - if: ## GET_REQUEST : 37602: Extract air temp.
              condition:
                - lambda: |-
                    return (id(canbus_debug_tag).state) == "GET-Extract-air-temp";
              then:                       
                        # Send the hexadecimal code "01 40 32 00 92 E2" over the CAN bus at address 0x1FE04208
                        # Candump = can0  1FE04208   [6]  01 40 32 00 92 E2
                        - canbus.send:
                            canbus_id: cbus
                            can_id: 0x1FE04208
                            data: [0x01, 0x40, 0x32, 0x00, 0x92, 0xE2]
                            use_extended_id: true
                                
          - if: ## GET_REQUEST : 0 : Outside air temp.
              condition:
                - lambda: |-
                    return (id(canbus_debug_tag).state) == "GET-Outside-air-temp";
              then:                       
                        # Send the hexadecimal code "01 40 32 00 00 00" over the CAN bus at address 0x1FE04208
                        # Candump = can0  1FE04208   [6]  01 40 32 00 00 00
                        - canbus.send:
                            canbus_id: cbus
                            can_id: 0x1FE04208
                            data: [0x01, 0x40, 0x32, 0x00, 0x00, 0x00]
                            use_extended_id: true
                                
                                
                                
